version: "2"
services:
  
  nginx:
    container_name: nginx
    build: ./gateway
    ports:
      - "80:80"
    depends_on:
      - db
      - minio
      - server
      - training

  ovpn:
    image: kylemanna/openvpn:2.4
    restart: always
    volumes:
      - ./ovpn-data:/etc/openvpn:rw
    ports:
      - 1194:1194/udp
    cap_add:
      - NET_ADMIN

  # Object Storage MinIO
  minio:
    image: minio/minio
    container_name: minio
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_PRIVATE_KEY}
    command: server --console-address ":9001" /data
  
  # MongoDB
  db:
    image: mongo:latest
    container_name: db
    volumes:
      - mongo_storage:/data/db
  
  # Application Server
  server:
    build: ./server
    container_name: server
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_PRIVATE_KEY: ${MINIO_PRIVATE_KEY}
      MODEL_BUCKET_NAME: ${MODEL_BUCKET_NAME}
      TRAINING_DATA_BUCKET_NAME: ${TRAINING_DATA_BUCKET_NAME}
      MONGO_DB_BACKUP_BUCKET_NAME: ${MONGO_DB_BACKUP_BUCKET_NAME}
    depends_on:
      - db
      - minio
  
  # Model Training Lambda
  training:
    build: ./training
    container_name: training
    command: python handler.py
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_PRIVATE_KEY: ${MINIO_PRIVATE_KEY}
      MODEL_BUCKET_NAME: ${MODEL_BUCKET_NAME}
      TRAINING_DATA_BUCKET_NAME: ${TRAINING_DATA_BUCKET_NAME}
      MONGO_DB_BACKUP_BUCKET_NAME: ${MONGO_DB_BACKUP_BUCKET_NAME}
    depends_on:
      - db
      - minio
    restart: always


volumes:
  minio_storage: {}
  mongo_storage: {}
  postgres_data: {}